"""
题目描述
给定一个数组和滑动窗口的大小，找出所有滑动窗口里数值的最大值。
例如，如果输入数组{2,3,4,2,6,2,5,1}及滑动窗口的大小3，那么一共存在6个滑动窗口，他们的最大值分别为{4,4,6,6,6,5}；
针对数组{2,3,4,2,6,2,5,1}的滑动窗口有以下6个： {[2,3,4],2,6,2,5,1}， {2,[3,4,2],6,2,5,1}，
{2,3,[4,2,6],2,5,1}， {2,3,4,[2,6,2],5,1}， {2,3,4,2,[6,2,5],1}， {2,3,4,2,6,[2,5,1]}。
窗口大于数组长度的时候，返回空
"""


# -*- coding:utf-8 -*-
class Solution:
    # 方法：动态规划
    # 将数组分成大小相等的块，每个块都可以理解为有两个数组 left 和 right。
    # left 方向从左到右，right 相反。left[i]是指块从开始到下标 i 的最大元素，right[j]是指块从开始到下标 j 的最大元素。
    # 假设滑动窗口的范围是[i, j]，滑动窗口中的最大值就是 max(right[i], left[j])
    def maxInWindows(self, num, size):
        if not num or len(num) == 0 or size <= 0:
            return []

        if size == 1:
            return num

        n = len(num)
        left = [0] * n
        left[0] = num[0]
        right = [0] * len(num)


